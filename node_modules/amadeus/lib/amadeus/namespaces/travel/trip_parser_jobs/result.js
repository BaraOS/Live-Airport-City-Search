"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * A namespaced client for the
 * `/v2/travel/trip-parser-jobs/{jobId}/result` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.travel.tripParserJobs.result;
 * ```
 *
 * @param {Client} client
 */
var Result =
/*#__PURE__*/
function () {
  function Result(client, jobId) {
    _classCallCheck(this, Result);

    this.client = client;
    this._jobId = jobId;
  }
  /**
   * To get the complete result of parsing as a aggregated view of Trip.
   *
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * To get the complete result of parsing job ID 'XXX'
   *
   * ```js
   * amadeus.travel.tripParserJobs('XXX').result.get();
   * ```
   */


  _createClass(Result, [{
    key: "get",
    value: function get() {
      if (this._jobId) return this.client.get('/v2/travel/trip-parser-jobs/' + this._jobId + '/result');else throw new Error('MISSING_REQUIRED_PARAMETER');
    }
  }]);

  return Result;
}();

var _default = Result;
exports["default"] = _default;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvdHJhdmVsL3RyaXBfcGFyc2VyX2pvYnMvcmVzdWx0LmpzIl0sIm5hbWVzIjpbIlJlc3VsdCIsImNsaWVudCIsImpvYklkIiwiX2pvYklkIiwiZ2V0IiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFNQSxNOzs7QUFDSixrQkFBWUMsTUFBWixFQUFvQkMsS0FBcEIsRUFBMkI7QUFBQTs7QUFDekIsU0FBS0QsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0UsTUFBTCxHQUFjRCxLQUFkO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7OzBCQVdNO0FBQ0osVUFBSSxLQUFLQyxNQUFULEVBQ0UsT0FBTyxLQUFLRixNQUFMLENBQVlHLEdBQVosQ0FBZ0IsaUNBQWlDLEtBQUtELE1BQXRDLEdBQStDLFNBQS9ELENBQVAsQ0FERixLQUdFLE1BQU0sSUFBSUUsS0FBSixDQUFVLDRCQUFWLENBQU47QUFDSDs7Ozs7O2VBR1lMLE0iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgbmFtZXNwYWNlZCBjbGllbnQgZm9yIHRoZVxuICogYC92Mi90cmF2ZWwvdHJpcC1wYXJzZXItam9icy97am9iSWR9L3Jlc3VsdGAgZW5kcG9pbnRzXG4gKlxuICogQWNjZXNzIHZpYSB0aGUge0BsaW5rIEFtYWRldXN9IG9iamVjdFxuICpcbiAqIGBgYGpzXG4gKiBsZXQgYW1hZGV1cyA9IG5ldyBBbWFkZXVzKCk7XG4gKiBhbWFkZXVzLnRyYXZlbC50cmlwUGFyc2VySm9icy5yZXN1bHQ7XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge0NsaWVudH0gY2xpZW50XG4gKi9cbmNsYXNzIFJlc3VsdCB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCwgam9iSWQpIHtcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgICB0aGlzLl9qb2JJZCA9IGpvYklkO1xuICB9XG5cbiAgLyoqXG4gICAqIFRvIGdldCB0aGUgY29tcGxldGUgcmVzdWx0IG9mIHBhcnNpbmcgYXMgYSBhZ2dyZWdhdGVkIHZpZXcgb2YgVHJpcC5cbiAgICpcbiAgICogQHJldHVybiB7UHJvbWlzZS48UmVzcG9uc2UsUmVzcG9uc2VFcnJvcj59IGEgUHJvbWlzZVxuICAgKlxuICAgKiBUbyBnZXQgdGhlIGNvbXBsZXRlIHJlc3VsdCBvZiBwYXJzaW5nIGpvYiBJRCAnWFhYJ1xuICAgKlxuICAgKiBgYGBqc1xuICAgKiBhbWFkZXVzLnRyYXZlbC50cmlwUGFyc2VySm9icygnWFhYJykucmVzdWx0LmdldCgpO1xuICAgKiBgYGBcbiAgICovXG4gIGdldCgpIHtcbiAgICBpZiAodGhpcy5fam9iSWQpXG4gICAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0KCcvdjIvdHJhdmVsL3RyaXAtcGFyc2VyLWpvYnMvJyArIHRoaXMuX2pvYklkICsgJy9yZXN1bHQnKTtcbiAgICBlbHNlXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ01JU1NJTkdfUkVRVUlSRURfUEFSQU1FVEVSJyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVzdWx0OyJdfQ==