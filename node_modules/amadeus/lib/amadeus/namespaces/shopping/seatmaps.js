"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * A namespaced client for the
 * `/v1/shopping/seatmaps` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.shopping.seatmaps;
 * ```
 *
 * @param {Client} client
 */
var Seatmaps =
/*#__PURE__*/
function () {
  function Seatmaps(client) {
    _classCallCheck(this, Seatmaps);

    this.client = client;
  }
  /**
   * To retrieve the seat map of each flight present in an order.
   *
   * @param {Object} params
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Retrieve the seat map for flight order with ID 'XXX'
   *
   * ```js
   * amadeus.shopping.seatmaps.get({
   *    'flight-orderId': 'XXX'}
   * );
   * ```
   */


  _createClass(Seatmaps, [{
    key: "get",
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.client.get('/v1/shopping/seatmaps', params);
    }
    /**
     * To retrieve the seat map of each flight included in a flight offer.
     *
     * @param {Object} params
     * @return {Promise.<Response,ResponseError>} a Promise
     *
     * To retrieve the seat map of each flight included in flight offers
     * for MAD-NYC flight on 2020-08-01.
     *
     * ```js
     * amadeus.shopping.flightOffers.get({
     *    origin: 'MAD',
     *    destination: 'NYC',
     *    departureDate: '2020-08-01'
     * }).then(function(response){
     *    return amadeus.shopping.flightOffers.seatmaps.post(
     *        JSON.stringify({
     *            'data': response.data
     *        })
     *    );
     * });
     * ```
    */

  }, {
    key: "post",
    value: function post() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.client.post('/v1/shopping/seatmaps', params);
    }
  }]);

  return Seatmaps;
}();

var _default = Seatmaps;
exports["default"] = _default;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvc2hvcHBpbmcvc2VhdG1hcHMuanMiXSwibmFtZXMiOlsiU2VhdG1hcHMiLCJjbGllbnQiLCJwYXJhbXMiLCJnZXQiLCJwb3N0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7SUFhTUEsUTs7O0FBQ0osb0JBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFDbEIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0Q7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7OzBCQWNpQjtBQUFBLFVBQWJDLE1BQWEsdUVBQUosRUFBSTtBQUNmLGFBQU8sS0FBS0QsTUFBTCxDQUFZRSxHQUFaLENBQWdCLHVCQUFoQixFQUF5Q0QsTUFBekMsQ0FBUDtBQUNEO0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzJCQXVCa0I7QUFBQSxVQUFiQSxNQUFhLHVFQUFKLEVBQUk7QUFDaEIsYUFBTyxLQUFLRCxNQUFMLENBQVlHLElBQVosQ0FBaUIsdUJBQWpCLEVBQTBDRixNQUExQyxDQUFQO0FBQ0Q7Ozs7OztlQUlZRixRIiwic291cmNlc0NvbnRlbnQiOlsiXG4vKipcbiAqIEEgbmFtZXNwYWNlZCBjbGllbnQgZm9yIHRoZVxuICogYC92MS9zaG9wcGluZy9zZWF0bWFwc2AgZW5kcG9pbnRzXG4gKlxuICogQWNjZXNzIHZpYSB0aGUge0BsaW5rIEFtYWRldXN9IG9iamVjdFxuICpcbiAqIGBgYGpzXG4gKiBsZXQgYW1hZGV1cyA9IG5ldyBBbWFkZXVzKCk7XG4gKiBhbWFkZXVzLnNob3BwaW5nLnNlYXRtYXBzO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtDbGllbnR9IGNsaWVudFxuICovXG5jbGFzcyBTZWF0bWFwcyB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIFRvIHJldHJpZXZlIHRoZSBzZWF0IG1hcCBvZiBlYWNoIGZsaWdodCBwcmVzZW50IGluIGFuIG9yZGVyLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqIEByZXR1cm4ge1Byb21pc2UuPFJlc3BvbnNlLFJlc3BvbnNlRXJyb3I+fSBhIFByb21pc2VcbiAgICpcbiAgICogUmV0cmlldmUgdGhlIHNlYXQgbWFwIGZvciBmbGlnaHQgb3JkZXIgd2l0aCBJRCAnWFhYJ1xuICAgKlxuICAgKiBgYGBqc1xuICAgKiBhbWFkZXVzLnNob3BwaW5nLnNlYXRtYXBzLmdldCh7XG4gICAqICAgICdmbGlnaHQtb3JkZXJJZCc6ICdYWFgnfVxuICAgKiApO1xuICAgKiBgYGBcbiAgICovXG4gIGdldChwYXJhbXMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5nZXQoJy92MS9zaG9wcGluZy9zZWF0bWFwcycsIHBhcmFtcyk7XG4gIH1cblxuICAvKipcbiAgICogVG8gcmV0cmlldmUgdGhlIHNlYXQgbWFwIG9mIGVhY2ggZmxpZ2h0IGluY2x1ZGVkIGluIGEgZmxpZ2h0IG9mZmVyLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqIEByZXR1cm4ge1Byb21pc2UuPFJlc3BvbnNlLFJlc3BvbnNlRXJyb3I+fSBhIFByb21pc2VcbiAgICpcbiAgICogVG8gcmV0cmlldmUgdGhlIHNlYXQgbWFwIG9mIGVhY2ggZmxpZ2h0IGluY2x1ZGVkIGluIGZsaWdodCBvZmZlcnNcbiAgICogZm9yIE1BRC1OWUMgZmxpZ2h0IG9uIDIwMjAtMDgtMDEuXG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGFtYWRldXMuc2hvcHBpbmcuZmxpZ2h0T2ZmZXJzLmdldCh7XG4gICAqICAgIG9yaWdpbjogJ01BRCcsXG4gICAqICAgIGRlc3RpbmF0aW9uOiAnTllDJyxcbiAgICogICAgZGVwYXJ0dXJlRGF0ZTogJzIwMjAtMDgtMDEnXG4gICAqIH0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2Upe1xuICAgKiAgICByZXR1cm4gYW1hZGV1cy5zaG9wcGluZy5mbGlnaHRPZmZlcnMuc2VhdG1hcHMucG9zdChcbiAgICogICAgICAgIEpTT04uc3RyaW5naWZ5KHtcbiAgICogICAgICAgICAgICAnZGF0YSc6IHJlc3BvbnNlLmRhdGFcbiAgICogICAgICAgIH0pXG4gICAqICAgICk7XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgKi9cbiAgcG9zdChwYXJhbXMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5wb3N0KCcvdjEvc2hvcHBpbmcvc2VhdG1hcHMnLCBwYXJhbXMpO1xuICB9XG5cbn1cblxuZXhwb3J0IGRlZmF1bHQgU2VhdG1hcHM7Il19