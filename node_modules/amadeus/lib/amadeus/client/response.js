"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var JSON_CONTENT_TYPES = ['application/json', 'application/vnd.amadeus+json'];
/**
 * The response object returned for every API call.
 *
 * @param {Object} http_response the response object returned from the Node/HTTP
 *  request
 * @param {Request} request the request object used to make this API call
 *
 * @property {number} statusCode the HTTP status code for the response, if any
 * @property {string} body the raw body received from the API
 * @property {Object} result the parsed JSON received from the API
 * @property {Object} data the data attribute taken from the result
 * @property {boolean} parsed wether the raw body has been parsed into JSON
 * @property {Request} request the request object used to make this API call
 *
 */

var Response =
/*#__PURE__*/
function () {
  function Response(http_response, request) {
    _classCallCheck(this, Response);

    var headers = http_response.headers || {};
    this.contentType = headers['content-type'];
    this.statusCode = http_response.statusCode;
    this.request = request;
    this.body = '';
    this.result = null;
    this.data = null;
    this.parsed = false;
  } // PROTECTED

  /**
   * Add a chunk received from the API to the body
   *
   * @param  {string} chunk a chunk of data
   * @protected
   */


  _createClass(Response, [{
    key: "addChunk",
    value: function addChunk(chunk) {
      this.body += chunk;
    }
    /**
     * Tries to parse parse the raw data
     * @protected
     */

  }, {
    key: "parse",
    value: function parse() {
      try {
        if (this.isJson()) {
          this.result = JSON.parse(this.body);
          this.data = this.result.data;
          this.parsed = true;
        } else {
          this.parsed = false;
        }
      } catch (SyntaxError) {
        this.parsed = false;
      }
    }
    /**
     * Wether this API call can be considered a success. Used to wrap the response
     * into a ResponseError
     *
     * @return {boolean}
     * @protected
     */

  }, {
    key: "success",
    value: function success() {
      return this.parsed && this.statusCode < 300;
    } // PRIVATE

    /**
     * Tests if the content is seemingly JSON
     *
     * @return {boolean}
     * @private
     */

  }, {
    key: "isJson",
    value: function isJson() {
      return JSON_CONTENT_TYPES.indexOf(this.contentType) !== -1;
    }
  }]);

  return Response;
}();

var _default = Response;
exports["default"] = _default;
module.exports = exports["default"];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hbWFkZXVzL2NsaWVudC9yZXNwb25zZS5qcyJdLCJuYW1lcyI6WyJKU09OX0NPTlRFTlRfVFlQRVMiLCJSZXNwb25zZSIsImh0dHBfcmVzcG9uc2UiLCJyZXF1ZXN0IiwiaGVhZGVycyIsImNvbnRlbnRUeXBlIiwic3RhdHVzQ29kZSIsImJvZHkiLCJyZXN1bHQiLCJkYXRhIiwicGFyc2VkIiwiY2h1bmsiLCJpc0pzb24iLCJKU09OIiwicGFyc2UiLCJTeW50YXhFcnJvciIsImluZGV4T2YiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFJQSxrQkFBa0IsR0FBRyxDQUFDLGtCQUFELEVBQXFCLDhCQUFyQixDQUF6QjtBQUVBOzs7Ozs7Ozs7Ozs7Ozs7O0lBZU1DLFE7OztBQUNKLG9CQUFZQyxhQUFaLEVBQTJCQyxPQUEzQixFQUFvQztBQUFBOztBQUNsQyxRQUFJQyxPQUFPLEdBQUdGLGFBQWEsQ0FBQ0UsT0FBZCxJQUF5QixFQUF2QztBQUNBLFNBQUtDLFdBQUwsR0FBbUJELE9BQU8sQ0FBQyxjQUFELENBQTFCO0FBQ0EsU0FBS0UsVUFBTCxHQUFtQkosYUFBYSxDQUFDSSxVQUFqQztBQUNBLFNBQUtILE9BQUwsR0FBbUJBLE9BQW5CO0FBQ0EsU0FBS0ksSUFBTCxHQUFtQixFQUFuQjtBQUNBLFNBQUtDLE1BQUwsR0FBbUIsSUFBbkI7QUFDQSxTQUFLQyxJQUFMLEdBQW1CLElBQW5CO0FBQ0EsU0FBS0MsTUFBTCxHQUFtQixLQUFuQjtBQUNELEcsQ0FFRDs7QUFFQTs7Ozs7Ozs7Ozs2QkFNU0MsSyxFQUFPO0FBQ2QsV0FBS0osSUFBTCxJQUFhSSxLQUFiO0FBQ0Q7QUFHRDs7Ozs7Ozs0QkFJUTtBQUNOLFVBQUk7QUFDRixZQUFJLEtBQUtDLE1BQUwsRUFBSixFQUFtQjtBQUNqQixlQUFLSixNQUFMLEdBQWNLLElBQUksQ0FBQ0MsS0FBTCxDQUFXLEtBQUtQLElBQWhCLENBQWQ7QUFDQSxlQUFLRSxJQUFMLEdBQVksS0FBS0QsTUFBTCxDQUFZQyxJQUF4QjtBQUNBLGVBQUtDLE1BQUwsR0FBYyxJQUFkO0FBQ0QsU0FKRCxNQUlPO0FBQ0wsZUFBS0EsTUFBTCxHQUFjLEtBQWQ7QUFDRDtBQUNGLE9BUkQsQ0FRRSxPQUFPSyxXQUFQLEVBQW9CO0FBQ3BCLGFBQUtMLE1BQUwsR0FBYyxLQUFkO0FBQ0Q7QUFDRjtBQUVEOzs7Ozs7Ozs7OzhCQU9VO0FBQ1IsYUFBUSxLQUFLQSxNQUFMLElBQWUsS0FBS0osVUFBTCxHQUFrQixHQUF6QztBQUNELEssQ0FFRDs7QUFHQTs7Ozs7Ozs7OzZCQU1TO0FBQ1AsYUFBUU4sa0JBQWtCLENBQUNnQixPQUFuQixDQUEyQixLQUFLWCxXQUFoQyxNQUFpRCxDQUFDLENBQTFEO0FBQ0Q7Ozs7OztlQUdZSixRIiwic291cmNlc0NvbnRlbnQiOlsibGV0IEpTT05fQ09OVEVOVF9UWVBFUyA9IFsnYXBwbGljYXRpb24vanNvbicsICdhcHBsaWNhdGlvbi92bmQuYW1hZGV1cytqc29uJ107XG5cbi8qKlxuICogVGhlIHJlc3BvbnNlIG9iamVjdCByZXR1cm5lZCBmb3IgZXZlcnkgQVBJIGNhbGwuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IGh0dHBfcmVzcG9uc2UgdGhlIHJlc3BvbnNlIG9iamVjdCByZXR1cm5lZCBmcm9tIHRoZSBOb2RlL0hUVFBcbiAqICByZXF1ZXN0XG4gKiBAcGFyYW0ge1JlcXVlc3R9IHJlcXVlc3QgdGhlIHJlcXVlc3Qgb2JqZWN0IHVzZWQgdG8gbWFrZSB0aGlzIEFQSSBjYWxsXG4gKlxuICogQHByb3BlcnR5IHtudW1iZXJ9IHN0YXR1c0NvZGUgdGhlIEhUVFAgc3RhdHVzIGNvZGUgZm9yIHRoZSByZXNwb25zZSwgaWYgYW55XG4gKiBAcHJvcGVydHkge3N0cmluZ30gYm9keSB0aGUgcmF3IGJvZHkgcmVjZWl2ZWQgZnJvbSB0aGUgQVBJXG4gKiBAcHJvcGVydHkge09iamVjdH0gcmVzdWx0IHRoZSBwYXJzZWQgSlNPTiByZWNlaXZlZCBmcm9tIHRoZSBBUElcbiAqIEBwcm9wZXJ0eSB7T2JqZWN0fSBkYXRhIHRoZSBkYXRhIGF0dHJpYnV0ZSB0YWtlbiBmcm9tIHRoZSByZXN1bHRcbiAqIEBwcm9wZXJ0eSB7Ym9vbGVhbn0gcGFyc2VkIHdldGhlciB0aGUgcmF3IGJvZHkgaGFzIGJlZW4gcGFyc2VkIGludG8gSlNPTlxuICogQHByb3BlcnR5IHtSZXF1ZXN0fSByZXF1ZXN0IHRoZSByZXF1ZXN0IG9iamVjdCB1c2VkIHRvIG1ha2UgdGhpcyBBUEkgY2FsbFxuICpcbiAqL1xuY2xhc3MgUmVzcG9uc2Uge1xuICBjb25zdHJ1Y3RvcihodHRwX3Jlc3BvbnNlLCByZXF1ZXN0KSB7XG4gICAgbGV0IGhlYWRlcnMgPSBodHRwX3Jlc3BvbnNlLmhlYWRlcnMgfHwge307XG4gICAgdGhpcy5jb250ZW50VHlwZSA9IGhlYWRlcnNbJ2NvbnRlbnQtdHlwZSddO1xuICAgIHRoaXMuc3RhdHVzQ29kZSAgPSBodHRwX3Jlc3BvbnNlLnN0YXR1c0NvZGU7XG4gICAgdGhpcy5yZXF1ZXN0ICAgICA9IHJlcXVlc3Q7XG4gICAgdGhpcy5ib2R5ICAgICAgICA9ICcnO1xuICAgIHRoaXMucmVzdWx0ICAgICAgPSBudWxsO1xuICAgIHRoaXMuZGF0YSAgICAgICAgPSBudWxsO1xuICAgIHRoaXMucGFyc2VkICAgICAgPSBmYWxzZTtcbiAgfVxuXG4gIC8vIFBST1RFQ1RFRFxuXG4gIC8qKlxuICAgKiBBZGQgYSBjaHVuayByZWNlaXZlZCBmcm9tIHRoZSBBUEkgdG8gdGhlIGJvZHlcbiAgICpcbiAgICogQHBhcmFtICB7c3RyaW5nfSBjaHVuayBhIGNodW5rIG9mIGRhdGFcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgYWRkQ2h1bmsoY2h1bmspIHtcbiAgICB0aGlzLmJvZHkgKz0gY2h1bms7XG4gIH1cblxuXG4gIC8qKlxuICAgKiBUcmllcyB0byBwYXJzZSBwYXJzZSB0aGUgcmF3IGRhdGFcbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgcGFyc2UoKSB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICh0aGlzLmlzSnNvbigpKSB7XG4gICAgICAgIHRoaXMucmVzdWx0ID0gSlNPTi5wYXJzZSh0aGlzLmJvZHkpO1xuICAgICAgICB0aGlzLmRhdGEgPSB0aGlzLnJlc3VsdC5kYXRhO1xuICAgICAgICB0aGlzLnBhcnNlZCA9IHRydWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLnBhcnNlZCA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0gY2F0Y2ggKFN5bnRheEVycm9yKSB7XG4gICAgICB0aGlzLnBhcnNlZCA9IGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBXZXRoZXIgdGhpcyBBUEkgY2FsbCBjYW4gYmUgY29uc2lkZXJlZCBhIHN1Y2Nlc3MuIFVzZWQgdG8gd3JhcCB0aGUgcmVzcG9uc2VcbiAgICogaW50byBhIFJlc3BvbnNlRXJyb3JcbiAgICpcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICogQHByb3RlY3RlZFxuICAgKi9cbiAgc3VjY2VzcygpIHtcbiAgICByZXR1cm4gKHRoaXMucGFyc2VkICYmIHRoaXMuc3RhdHVzQ29kZSA8IDMwMCk7XG4gIH1cblxuICAvLyBQUklWQVRFXG5cblxuICAvKipcbiAgICogVGVzdHMgaWYgdGhlIGNvbnRlbnQgaXMgc2VlbWluZ2x5IEpTT05cbiAgICpcbiAgICogQHJldHVybiB7Ym9vbGVhbn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGlzSnNvbigpIHtcbiAgICByZXR1cm4gKEpTT05fQ09OVEVOVF9UWVBFUy5pbmRleE9mKHRoaXMuY29udGVudFR5cGUpICE9PSAtMSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUmVzcG9uc2U7XG4iXX0=